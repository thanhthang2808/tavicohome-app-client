import { Button } from "@/components/ui/button";
import bannerOne from "@/assets/banner/banner1.jpg";
import bannerTwo from "@/assets/banner/banner2.jpg";
import bannerThree from "@/assets/banner/banner3.jpg";
import bannerFour from "@/assets/banner/banner4.jpg";

import {
  Airplay,
  BabyIcon,
  ChevronLeftIcon,
  ChevronRightIcon,
  CloudLightning,
  Heater,
  Images,
  Shirt,
  ShirtIcon,
  ShoppingBasket,
  UmbrellaIcon,
  WashingMachine,
  WatchIcon,
} from "lucide-react";
import { Card, CardContent } from "@/components/ui/card";
import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import {
  fetchAllFilteredProducts,
  fetchProductDetails,
} from "@/store/shop/products-slice";
import ShoppingProductTile from "@/components/shopping-view/product-tile";
import { useNavigate } from "react-router-dom";
import { addToCart, fetchCartItems } from "@/store/shop/cart-slice";
import { useToast } from "@/components/ui/use-toast";
import ProductDetailsDialog from "@/components/shopping-view/product-details";
import { getFeatureImages } from "@/store/common-slice";
import { motion } from "framer-motion";
import aboutUsImg from "@/assets/about-us.jpg";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import {
  faUtensils,
  faTruckLoading,
  faUsers,
  faBuilding,
  faPlay,
  faTruck,
  faBoxes,
  faTag,
  faWarehouse,
  faLocationDot,
} from "@fortawesome/free-solid-svg-icons";
import giaiTriImg from "@/assets/giaitri-anuong.jpg";
import suKienImg from "@/assets/sukien-hoinghi.jpg";
import matBangImg from "@/assets/matbang.jpg";
import bocXepImg from "@/assets/bocxep.jpeg";
import PartnerSection from "@/components/common/partner-section";
import { Helmet } from "react-helmet";

const categoriesWithIcon = [
  { id: "men", label: "Men", icon: ShirtIcon },
  { id: "women", label: "Women", icon: CloudLightning },
  { id: "kids", label: "Kids", icon: BabyIcon },
  { id: "accessories", label: "Accessories", icon: WatchIcon },
  { id: "footwear", label: "Footwear", icon: UmbrellaIcon },
];

const brandsWithIcon = [
  { id: "nike", label: "Nike", icon: Shirt },
  { id: "adidas", label: "Adidas", icon: WashingMachine },
  { id: "puma", label: "Puma", icon: ShoppingBasket },
  { id: "levi", label: "Levi's", icon: Airplay },
  { id: "zara", label: "Zara", icon: Images },
  { id: "h&m", label: "H&M", icon: Heater },
];

const services = [
  {
    id: "entertainment-food",
    label: "Gi·∫£i tr√≠ - ƒÉn u·ªëng",
    icon: (
      <FontAwesomeIcon
        icon={faUtensils}
        className="w-12 h-12 mb-4 text-white"
      />
    ),
    description:
      "Khu ph·ª©c h·ª£p d·ªãch v·ª• ƒÉn u·ªëng v√† gi·∫£i tr√≠, bao g·ªìm H·ªôi qu√°n Dowa, Cafe G·ªó T√¢y, ƒëi·ªÉm t√¢m s√°ng, c∆°m tr∆∞a vƒÉn ph√≤ng, h·ªì b∆°i, s√¢n b√≥ng v√† ph√≤ng t·∫≠p gym.",
    imageUrl: giaiTriImg,
  },
  {
    id: "packing-moving",
    label: "B·ªëc x·∫øp - ƒë√≥ng g√≥i",
    icon: (
      <FontAwesomeIcon
        icon={faTruckLoading}
        className="w-12 h-12 mb-4 text-white"
      />
    ),
    description:
      "Cung c·∫•p d·ªãch v·ª• b·ªëc x·∫øp v√† ƒë√≥ng g√≥i chuy√™n nghi·ªáp, nhanh ch√≥ng, ƒë·∫£m b·∫£o an to√†n.",
    imageUrl: bocXepImg,
  },
  {
    id: "events-conference",
    label: "S·ª± ki·ªán - h·ªôi ngh·ªã",
    icon: (
      <FontAwesomeIcon icon={faUsers} className="w-12 h-12 mb-4 text-white" />
    ),
    description:
      "Cho thu√™ ƒë·ªãa ƒëi·ªÉm t·ªï ch·ª©c s·ª± ki·ªán sang tr·ªçng v·ªõi kh√¥ng gian r·ªông r√£i, v√≤m g·ªó ngo√†i tr·ªùi v√† khu v·ª±c check-in ƒë·∫πp m·∫Øt, mang ƒë·∫øn tr·∫£i nghi·ªám ƒë√°ng nh·ªõ.",
    imageUrl: suKienImg,
  },
  {
    id: "property-rent",
    label: "Thu√™ m·∫∑t b·∫±ng",
    icon: (
      <FontAwesomeIcon
        icon={faWarehouse}
        className="w-12 h-12 mb-4 text-white"
      />
    ),
    description:
      "D·ªãch v·ª• cho thu√™ m·∫∑t b·∫±ng r·ªông tho√°ng, ƒë√°p ·ª©ng t·ªët m·ªçi di·ªán t√≠ch thu√™ theo y√™u c·∫ßu c·ªßa kh√°ch h√†ng.",
    imageUrl: matBangImg,
  },
];

const advantages = [
  { id: 1, label: "V·ªã tr√≠ thu·∫≠n l·ª£i", icon: faLocationDot },
  { id: 2, label: "M·∫∑t b·∫±ng r·ªông tho√°ng", icon: faWarehouse },
  { id: 3, label: "Gi√° c·∫£ h·∫•p d·∫´n", icon: faTag },
  { id: 4, label: "Thu h√∫t kh√°ch h√†ng", icon: faUsers },
  { id: 5, label: "H·∫≠u c·∫ßn chu ƒë√°o", icon: faTruck },
  { id: 6, label: "H√†ng h√≥a ƒëa d·∫°ng", icon: faBoxes },
];

const videoData = [
  {
    id: "SvX40rH22UU",
    title: "Tri √¢n t·ª´ CB-CNV m·ª´ng k·ª∑ ni·ªám 18 nƒÉm th√†nh l·∫≠p TAVICO GROUP",
  },
  {
    id: "CtQ37k9Iz9E",
    title: "K·ª∑ ni·ªám 15 nƒÉm th√†nh l·∫≠p TAVICO 05/04/2005 - 05/04/2020",
  },
  { id: "cSAExYpO0Vg", title: "KHAI M·∫†C H·ªòI CH·ª¢ G·ªñ V√Ä N·ªòI TH·∫§T CU·ªêI NƒÇM 2022" },
  {
    id: "LcxZTB30cd0",
    title: "Ng√†nh g·ªó Vi·ªát Nam tr∆∞·ªõc ·∫£nh h∆∞·ªüng c·ªßa d·ªãch COVID-19",
  },
];

const sectionVariants = {
  hidden: { opacity: 0, y: 50 },
  visible: { opacity: 1, y: 0, transition: { duration: 0.8 } },
};

const staggerVariants = {
  hidden: { opacity: 0 },
  visible: {
    opacity: 1,
    transition: {
      staggerChildren: 0.2, // M·ªói ph·∫ßn t·ª≠ s·∫Ω xu·∫•t hi·ªán ch·∫≠m h∆°n 0.2 gi√¢y
    },
  },
};

const itemVariants = {
  hidden: { opacity: 0, y: 20 },
  visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },
};

const defaultFeatureImages = [
  {
    id: 1,
    image: bannerOne,
  },
  {
    id: 2,
    image: bannerTwo,
  },
  {
    id: 3,
    image: bannerThree,
  },
  {
    id: 4,
    image: bannerFour,
  },
];  

const pageDescription = "Tavico kh√¥ng ch·ªâ ƒë∆∞·ª£c bi·∫øt ƒë·∫øn l√† Trung t√¢m ph√¢n ph·ªëi g·ªó nguy√™n li·ªáu h·ª£p ph√°p trong 15 nƒÉm qua cho c√°c nh√† m√°y ch·∫ø bi·∫øn g·ªó m√† c√≤n t·∫°o ra Th·∫ø Gi·ªõi N·ªôi Th·∫•t G·ªó T√¢y - Tavico H·ªë Nai nh·∫±m t·∫°o ƒëi·ªÅu ki·ªán thu·∫≠n l·ª£i cho c√°c DN s·∫£n xu·∫•t ƒë·ªì g·ªó n·ªôi th·∫•t c√≥ ƒë·ªß di·ªán t√≠ch tr∆∞ng b√†y h√†ng ho√° m√† c√≤n gi√∫p ng∆∞·ªùi mua h√†ng ti·∫øt ki·ªám th·ªùi gian ch·ªçn l·ª±a m·∫∑t h√†ng n·ªôi th·∫•t ∆∞ng √Ω c≈©ng nh∆∞ mua ƒë∆∞·ª£c h√†ng xu·∫•t kh·∫©u v·ªõi gi√° xu·∫•t kho.V·ªõi ph∆∞∆°ng ch√¢m Ch·∫•t l∆∞·ª£ng T√¢y, gi√° Ta, kh√¥ng n∆°i n√†o b·∫±ng. TH·∫æ GI·ªöI N·ªòI TH·∫§T G·ªñ T√ÇY - TAVICO H·ªê NAI ƒê∆∞·ªùng ƒêi·ªÉu Xi·ªÉn, T·ªï 8, khu ph·ªë 9, P.T√¢n Bi√™n, TP. Bi√™n H√≤a, T·ªânh ƒê·ªìng Nai ƒêùê¢·ªáùêß ùê≠ùê°ùê®·∫°ùê¢ : 085 555 55 95 - 0988 951 579";

function ShoppingHome() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const { productList, productDetails } = useSelector(
    (state) => state.shopProducts
  );
  const { featureImageList } = useSelector((state) => state.commonFeature);

  const imagesToDisplay =
    featureImageList && featureImageList.length > 0
      ? featureImageList
      : defaultFeatureImages;
  
      useEffect(() => {
        imagesToDisplay.forEach((slide) => {
          const img = new Image();
          img.src = slide?.image; // Preload the image
        });
      }, [imagesToDisplay]);

  const [openDetailsDialog, setOpenDetailsDialog] = useState(false);

  const { user } = useSelector((state) => state.auth);

  const dispatch = useDispatch();
  const navigate = useNavigate();
  const { toast } = useToast();

  function handleNavigateToListingPage(getCurrentItem, section) {
    sessionStorage.removeItem("filters");
    const currentFilter = {
      [section]: [getCurrentItem.id],
    };

    sessionStorage.setItem("filters", JSON.stringify(currentFilter));
    navigate(`/listing`);
  }

  function handleGetProductDetails(getCurrentProductId) {
    dispatch(fetchProductDetails(getCurrentProductId));
  }

  function handleAddtoCart(getCurrentProductId) {
    dispatch(
      addToCart({
        userId: user?.id,
        productId: getCurrentProductId,
        quantity: 1,
      })
    ).then((data) => {
      if (data?.payload?.success) {
        dispatch(fetchCartItems(user?.id));
        toast({
          title: "Product is added to cart",
        });
      }
    });
  }

  useEffect(() => {
    if (productDetails !== null) setOpenDetailsDialog(true);
  }, [productDetails]);

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prevSlide) => (prevSlide + 1) % imagesToDisplay.length);
    }, 15000);

    return () => clearInterval(timer);
  }, [imagesToDisplay]);

  useEffect(() => {
    dispatch(
      fetchAllFilteredProducts({
        filterParams: {},
        sortParams: "price-lowtohigh",
      })
    );
  }, [dispatch]);

  useEffect(() => {
    dispatch(getFeatureImages());
  }, [dispatch]);

  const getThumbnailUrl = (videoId) => {
    return `https://img.youtube.com/vi/${videoId}/0.jpg`;
  };

  return (
    <div className="flex flex-col min-h-screen">
      <Helmet>
        <title>Th·∫ø Gi·ªõi G·ªó v√† N·ªôi Th·∫•t - Tavico Home</title>
        <meta name="description" content={pageDescription} />
      </Helmet>
      <div className="relative w-full overflow-hidden">
        <div className="relative h-[50vw] md:h-[600px] overflow-hidden">
          {imagesToDisplay && imagesToDisplay.length > 0
            ? imagesToDisplay.map((slide, index) => (
                <img
                  src={slide?.image}
                  key={index}
                  alt={`Tavico Home Banner ${index + 1}`}
                  className={`${
                    index === currentSlide ? "opacity-100" : "opacity-0"
                  } absolute top-0 left-0 w-full h-full object-cover transition-opacity duration-1000`}
                />
              ))
            : null}
          <Button
            variant="outline"
            size="icon"
            onClick={() =>
              setCurrentSlide(
                (prevSlide) =>
                  (prevSlide - 1 + imagesToDisplay.length) %
                  imagesToDisplay.length
              )
            }
            className="absolute top-1/2 left-4 transform -translate-y-1/2 bg-white/80"
          >
            <ChevronLeftIcon className="w-4 h-4" />
          </Button>
          <Button
            variant="outline"
            size="icon"
            onClick={() =>
              setCurrentSlide(
                (prevSlide) => (prevSlide + 1) % imagesToDisplay.length
              )
            }
            className="absolute top-1/2 right-4 transform -translate-y-1/2 bg-white/80"
          >
            <ChevronRightIcon className="w-4 h-4" />
          </Button>
        </div>
      </div>

      {/* V·ªÅ ch√∫ng t√¥i */}
      <motion.section
        className="py-12"
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
      >
        <div className="container mx-auto px-4 flex flex-col md:flex-row items-center gap-8">
          <motion.div className="w-full md:w-1/2">
            <img
              src={aboutUsImg}
              alt="V·ªÅ ch√∫ng t√¥i"
              className="rounded-lg shadow-lg w-[80%] mx-auto md:w-full"
            />
          </motion.div>
          <div className="w-full md:w-1/2 text-center md:text-left">
            <motion.h2
              className="text-4xl font-bold text-primary mb-4"
              initial={{ opacity: 0, x: -50 }}
              animate={{ opacity: 1, x: 0 }}
              transition={{ delay: 0.2, duration: 0.5 }}
            >
              V·ªÅ ch√∫ng t√¥i
            </motion.h2>
            <motion.p
              className="text-lg text-gray-700 leading-relaxed"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: 0.4, duration: 0.5 }}
            >
              L·∫ßn ƒë·∫ßu ti√™n t·∫°i Vi·ªát Nam, m·ªôt ch·ª£ ƒë·∫ßu m·ªëi d√†nh cho ƒë·ªì g·ªó n·ªôi th·∫•t
              ƒë√£ ƒë∆∞·ª£c ƒë·∫ßu t∆∞ ph√°t tri·ªÉn ngay b√™n c·∫°nh khu l√†ng ngh·ªÅ H·ªë Nai nh·∫±m
              m·ª•c ƒë√≠ch k·∫øt n·ªëi tr·ª±c ti·∫øp c√°c nh√† s·∫£n xu·∫•t v√† ph√¢n ph·ªëi ƒë·ªì g·ªó n·ªôi
              th·∫•t v·ªõi t·∫•t c·∫£ c√°c nh√† b√°n l·∫ª tr√™n to√†n b·ªô khu v·ª±c Mi·ªÅn Nam.
              Ch√∫ng t√¥i t·∫°o ra m·ªôt k√™nh trao ƒë·ªïi h√†ng h√≥a chuy√™n bi·ªát, ·ªïn ƒë·ªãnh &
              hi·ªáu qu·∫£ cao v·ªõi s·ªë l∆∞·ª£ng l·ªõn cho c·∫£ nh√† cung c·∫•p v√† nh√† b√°n l·∫ª.
            </motion.p>
            <motion.button
              className="mt-6 px-4 py-2 bg-primary text-white font-semibold text-sm rounded-full shadow-md hover:shadow-lg focus:ring-2 focus:ring-primary-light transition-transform duration-200 ease-out"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.97 }}
              onClick={() =>
                (window.location.href =
                  "/gioi-thieu/cong-ty-co-phan-tavico-home")
              }
            >
              T√¨m hi·ªÉu th√™m
            </motion.button>
          </div>
        </div>
      </motion.section>

      {/* D·ªãch v·ª• cung c·∫•p */}
      <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
        className="py-12 bg-blue-900"
      >
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-yellow-400 text-center mb-8">
            D·ªãch v·ª• cung c·∫•p
          </h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {services.map((service) => (
              <motion.div
                key={service.id}
                whileHover={{ scale: 1.05 }}
                className="relative h-full bg-white cursor-pointer rounded-lg shadow-md p-6 flex flex-col items-center text-center hover:shadow-xl transition-shadow"
              >
                <div
                  className="absolute inset-0 bg-cover bg-center rounded-lg"
                  style={{ backgroundImage: `url(${service.imageUrl})` }}
                ></div>
                <div className="absolute inset-0 bg-black opacity-50 rounded-lg"></div>
                <div className="relative z-10 mb-4">{service.icon}</div>
                <h3 className="text-2xl font-bold text-white mb-2 z-10">
                  {service.label}
                </h3>
                <p className="text-gray-300 text-sm z-10">
                  {service.description}
                </p>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section>

      {/* Video */}
      <motion.section
        className="py-12"
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
      >
        <div className="container mx-auto px-4 flex flex-col md:flex-row gap-8">
          <div className="w-full md:w-2/3">
            <iframe
              width="100%"
              height="500"
              src="https://www.youtube.com/embed/nmaOrjE_CPw"
              title="Video l·ªõn"
              allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
              allowFullScreen
            ></iframe>
            <h2 className="text-xl font-semibold text-gray-800 text-center mt-1">
              K·ª∂ NI·ªÜM 18 NƒÇM TH√ÄNH L·∫¨P TAVICO GROUP 05/04/2005 - 05/04/2023
            </h2>
          </div>
          <div className="w-full md:w-1/3 flex flex-col gap-4">
            <div className="grid grid-cols-2 gap-4">
              {videoData.map((videoItem, index) => (
                <motion.div
                  key={index}
                  className="relative cursor-pointer group"
                  whileHover={{ scale: 1.05 }}
                  onClick={() =>
                    window.open(
                      `https://www.youtube.com/watch?v=${videoItem.id}`,
                      "_blank"
                    )
                  }
                >
                  <img
                    src={getThumbnailUrl(videoItem.id)}
                    alt={`Video thumbnail ${index + 1}`}
                    className="w-full h-auto rounded-lg"
                    style={{ objectFit: "cover" }}
                  />
                  <div className="absolute top-0 left-0 w-full h-full bg-black/30 opacity-0 group-hover:opacity-100 flex items-center justify-center">
                    <FontAwesomeIcon
                      icon={faPlay}
                      className="text-white text-4xl"
                    />
                  </div>
                  <div className="mt-2 text-center text-sm font-semibold text-gray-700">
                    {videoItem.title}
                  </div>
                </motion.div>
              ))}
            </div>
            <motion.button
              className="mt-4 px-6 py-2 bg-primary text-white font-semibold text-sm rounded-full shadow-md hover:shadow-lg focus:ring-2 focus:ring-primary-light transition-transform duration-200 ease-out"
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.97 }}
              onClick={() =>
                window.open(
                  "https://www.youtube.com/@thegioinoithatgotaytavicohome/videos",
                  "_blank"
                )
              }
            >
              Xem th√™m
            </motion.button>
          </div>
        </div>
      </motion.section>

      {/* Nh·ªØng l·ª£i th·∫ø c·ªßa ch·ª£ ƒë·∫ßu m·ªëi */}
      <motion.section
        className="py-12"
        variants={staggerVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
      >
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center text-primary mb-8">
            Nh·ªØng l·ª£i th·∫ø c·ªßa ch·ª£ ƒë·∫ßu m·ªëi
          </h2>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6">
            {advantages.map((advantage) => (
              <motion.div
                key={advantage.id}
                whileHover={{ scale: 1.1 }}
                className="flex flex-col items-center justify-center text-center space-y-4"
                variants={itemVariants}
              >
                <div className="w-16 h-16 flex items-center justify-center bg-blue-700 text-white rounded-full">
                  <FontAwesomeIcon icon={advantage.icon} className="text-xl" />
                </div>
                <span className="font-medium text-gray-700 text-lg truncate">
                  {advantage.label}
                </span>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section>

      {/* Showroom G·ªó n·ªôi th·∫•t */}
      <motion.section
        className="py-12"
        variants={staggerVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
      >
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center text-primary mb-8">
            Showroom G·ªó n·ªôi th·∫•t
          </h2>
        </div>
      </motion.section>

      <div className="py-12">
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center text-primary mb-8">
            ƒê·ªëi t√°c
          </h2>
        </div>
        <PartnerSection />
      </div>

      {/* <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
        className="py-12 bg-gray-50"
      >
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-8">
            Shop by category
          </h2>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4">
            {categoriesWithIcon.map((categoryItem) => (
              <motion.div
                key={categoryItem.id}
                whileHover={{ scale: 1.1 }}
                className="h-full"
              >
                <Card
                  onClick={() =>
                    handleNavigateToListingPage(categoryItem, "category")
                  }
                  className="cursor-pointer hover:shadow-lg transition-shadow"
                >
                  <CardContent className="flex flex-col items-center justify-center p-6">
                    <categoryItem.icon className="w-12 h-12 mb-4 text-primary" />
                    <span className="font-bold">{categoryItem.label}</span>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section> */}

      {/* <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
        className="py-12 bg-gray-50"
      >
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-8">Shop by Brand</h2>
          <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-4">
            {brandsWithIcon.map((brandItem) => (
              <motion.div
                key={brandItem.id}
                whileHover={{ scale: 1.1 }}
                className="h-full"
              >
                <Card
                  onClick={() =>
                    handleNavigateToListingPage(brandItem, "brand")
                  }
                  className="cursor-pointer hover:shadow-lg transition-shadow"
                >
                  <CardContent className="flex flex-col items-center justify-center p-6">
                    <brandItem.icon className="w-12 h-12 mb-4 text-primary" />
                    <span className="font-bold">{brandItem.label}</span>
                  </CardContent>
                </Card>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section> */}

      {/* <motion.section
        variants={sectionVariants}
        initial="hidden"
        whileInView="visible"
        viewport={{ once: true, amount: 0.2 }}
        className="py-12"
      >
        <div className="container mx-auto px-4">
          <h2 className="text-3xl font-bold text-center mb-8">
            Feature Products
          </h2>
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {productList && productList.length > 0
              ? productList.map((productItem) => (
                  <motion.div
                    key={productItem.id}
                    whileHover={{ scale: 1.05 }}
                    className="h-full"
                  >
                    <ShoppingProductTile
                      handleGetProductDetails={handleGetProductDetails}
                      product={productItem}
                      handleAddtoCart={handleAddtoCart}
                    />
                  </motion.div>
                ))
              : null}
          </div>
        </div>
      </motion.section> */}

      <ProductDetailsDialog
        open={openDetailsDialog}
        setOpen={setOpenDetailsDialog}
        productDetails={productDetails}
      />
    </div>
  );
}

export default ShoppingHome;
